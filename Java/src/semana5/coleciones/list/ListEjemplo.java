package list;

// ğŸ§ª ListEjemplo.java
// Este archivo muestra cÃ³mo se usa List en Java, quÃ© lo diferencia de los arrays, y cÃ³mo manipular sus elementos.

import java.util.ArrayList;
import java.util.List;

public class ListEjemplo {
    public static void main(String[] args) {

        // ğŸ”¹ DECLARACIÃ“N de una lista
        // Usamos la interfaz List para declarar y ArrayList como implementaciÃ³n.
        // Esto nos da flexibilidad para cambiar por otra implementaciÃ³n si lo deseamos (como LinkedList).
        List<String> frutas = new ArrayList<>();

        // ğŸ”¹ AGREGAR elementos con .add()
        // A diferencia de los arrays, List crece dinÃ¡micamente.
        frutas.add("Manzana");
        frutas.add("Pera");
        frutas.add("Manzana"); // âœ… List permite duplicados

        // ğŸ”¹ IMPRIMIR usando bucle for-each
        System.out.println("Lista de frutas:");
        for (String fruta : frutas) {
            System.out.println("- " + fruta);
        }

        // ğŸ”¹ ACCEDER por Ã­ndice con .get()
        System.out.println("\nFruta en posiciÃ³n 1: " + frutas.get(1)); // "Pera"

        // ğŸ”¹ MODIFICAR un valor con .set()
        frutas.set(1, "Durazno");
        System.out.println("DespuÃ©s de modificar la posiciÃ³n 1: " + frutas);

        // ğŸ”¹ ELIMINAR por Ã­ndice con .remove()
        frutas.remove(0); // Elimina "Manzana" en Ã­ndice 0
        System.out.println("DespuÃ©s de eliminar el Ã­ndice 0: " + frutas);

        // ğŸ”¹ VERIFICAR si contiene un elemento con .contains()
        boolean tieneBanana = frutas.contains("Banana");
        System.out.println("Â¿Contiene 'Banana'? " + tieneBanana); // false

        // ğŸ”¹ TAMAÃ‘O de la lista con .size()
        System.out.println("TamaÃ±o de la lista: " + frutas.size());

        // ğŸ”¹ LIMPIAR la lista con .clear()
        frutas.clear();
        System.out.println("Â¿Lista vacÃ­a?: " + frutas.isEmpty()); // true
    }
}
